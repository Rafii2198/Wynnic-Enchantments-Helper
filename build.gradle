plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id 'com.diffplug.spotless' version "7.0.3"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

spotless {
	java {
		palantirJavaFormat()
		formatAnnotations()
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
	maven {
		name 'IzzelAliz Maven'
		url 'https://maven.izzel.io/releases/'
	}
	maven {
		url 'https://raw.githubusercontent.com/Fuzss/modresources/main/maven/'
		content {
			includeGroup 'fuzs.forgeconfigapiport'
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.2.1")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:Wq5SjeWM:${project.fm_version}" // Fancy Menu
	modImplementation "maven.modrinth:J81TRJWm:${project.konkrete_version}" // Konkrete
	modImplementation "maven.modrinth:CVT4pFB2:${project.melody_version}" // Melody
	modImplementation "maven.modrinth:dU5Gb9Ab:${project.wynntils_version}" // Wynntils
	include implementation("org.jsoup:jsoup:1.20.1") // Jsoup
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

loom {
	runs {
		configureEach {
			vmArgs "-Dmodernui.resource.pack=true"
		}
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}